dmake_version: 0.1
app_name: deepomatic-client-python
env:
  default:
    source: ${DEEPOMATIC_CONFIG_DIR}/dev.sh
    variables:
      DEEPOMATIC_APP_ID: ${TEST_CLIENTS_APP_ID}
      DEEPOMATIC_API_KEY: ${TEST_CLIENTS_API_KEY}
      DEEPOMATIC_API_URL: ${DEEPOMATIC_API_URL:-https://api.deepomatic.com}
  branches:
    master:
      source: ${DEEPOMATIC_CONFIG_DIR}/prod.sh

docker:
  base_image:
    # This first item is a YAML template named "base_image"
    # You can reuse it and override just some values with
    # "- <<: *base_image" as used below.
    - &base_image
      name: deepomatic-client-python
      variant: '3.6'
      root_image: python:3.6
      copy_files:
        - requirements.txt
        - requirements.dev.txt
      install_scripts:
        - deploy/install.sh
    # Nothing changes comparing to above, except 'variant' and 'root_image'
    - <<: *base_image
      variant: '3.7'
      root_image: python:3.7
    - <<: *base_image
      variant: '3.8'
      root_image: python:3.8
    - <<: *base_image
      variant: '3.9'
      root_image: python:3.9
    - <<: *base_image
      variant: '3.10'
      root_image: python:3.10
    - <<: *base_image
      variant: '3.11'
      root_image: python:3.11
    - <<: *base_image
      variant: '3.12'
      root_image: python:3.12

services:
  - service_name: client
    config:
      docker_image:
        build:
          context: .
          dockerfile: deploy/Dockerfile
          target: dev
        base_image_variant:
          - '3.6'
          - '3.7'
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'
    tests:
      commands:
        - LOG_LEVEL=DEBUG pytest --junit-xml=junit.xml --cov=. --cov-report=xml:coverage.xml --cov-report html:cover -vv /app/tests
      junit_report: junit.xml
      cobertura_report: coverage.xml
      html_report:
        directory: cover
        title: HTML coverage report

  - service_name: build-egg
    # unit tests must have passed on all supported platforms to build the universal egg
    needed_services:
      - client:3.6
      - client:3.7
      - client:3.8
      - client:3.9
      - client:3.10
      - client:3.11
      - client:3.12
    config:
      docker_image:
        build:
          context: .
          dockerfile: deploy/Dockerfile
          target: build
        base_image_variant: '3.6'
    tests:
      # TODO follow up on https://github.com/Deepomatic/dmake/issues/311
      data_volumes:
       - container_volume: /dist/
         source: ./dist/
      commands:
        # copy universal egg
        - rm -rf /dist/*
        - cp /app/dist/* /dist
        - chmod -R a+w /dist

  - service_name: test-egg-py3
    needed_services:
      - build-egg
    config:
      docker_image:
        build:
          context: .
          dockerfile: deploy/Dockerfile
          target: runtime-py3
        # only used by dmake shell; bypassed by runtime-py3 Dockerfile target
        base_image_variant:
          - '3.6'
    tests:
      data_volumes:
       - container_volume: /dist/
         source: ./dist/
      commands:
        - pip install /dist/deepomatic_api-*.whl
        - LOG_LEVEL=DEBUG python /app/demo.py
